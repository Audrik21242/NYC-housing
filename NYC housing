{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.14","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":4396,"sourceType":"datasetVersion","datasetId":2648}],"dockerImageVersionId":30761,"isInternetEnabled":false,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\npd.set_option('display.max_columns', None)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-09-02T17:20:50.837277Z","iopub.execute_input":"2024-09-02T17:20:50.837786Z","iopub.status.idle":"2024-09-02T17:20:51.401601Z","shell.execute_reply.started":"2024-09-02T17:20:50.837740Z","shell.execute_reply":"2024-09-02T17:20:51.398824Z"},"trusted":true},"execution_count":14,"outputs":[{"name":"stdout","text":"/kaggle/input/nyc-property-sales/nyc-rolling-sales.csv\n","output_type":"stream"}]},{"cell_type":"code","source":"df = pd.read_csv('/kaggle/input/nyc-property-sales/nyc-rolling-sales.csv')","metadata":{"execution":{"iopub.status.busy":"2024-09-02T17:10:36.638152Z","iopub.execute_input":"2024-09-02T17:10:36.638717Z","iopub.status.idle":"2024-09-02T17:10:37.084672Z","shell.execute_reply.started":"2024-09-02T17:10:36.638656Z","shell.execute_reply":"2024-09-02T17:10:37.083129Z"},"trusted":true},"execution_count":64,"outputs":[]},{"cell_type":"code","source":"df.info()","metadata":{"execution":{"iopub.status.busy":"2024-09-02T17:10:37.086130Z","iopub.execute_input":"2024-09-02T17:10:37.086563Z","iopub.status.idle":"2024-09-02T17:10:37.211982Z","shell.execute_reply.started":"2024-09-02T17:10:37.086518Z","shell.execute_reply":"2024-09-02T17:10:37.210863Z"},"trusted":true},"execution_count":65,"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 84548 entries, 0 to 84547\nData columns (total 22 columns):\n #   Column                          Non-Null Count  Dtype \n---  ------                          --------------  ----- \n 0   Unnamed: 0                      84548 non-null  int64 \n 1   BOROUGH                         84548 non-null  int64 \n 2   NEIGHBORHOOD                    84548 non-null  object\n 3   BUILDING CLASS CATEGORY         84548 non-null  object\n 4   TAX CLASS AT PRESENT            84548 non-null  object\n 5   BLOCK                           84548 non-null  int64 \n 6   LOT                             84548 non-null  int64 \n 7   EASE-MENT                       84548 non-null  object\n 8   BUILDING CLASS AT PRESENT       84548 non-null  object\n 9   ADDRESS                         84548 non-null  object\n 10  APARTMENT NUMBER                84548 non-null  object\n 11  ZIP CODE                        84548 non-null  int64 \n 12  RESIDENTIAL UNITS               84548 non-null  int64 \n 13  COMMERCIAL UNITS                84548 non-null  int64 \n 14  TOTAL UNITS                     84548 non-null  int64 \n 15  LAND SQUARE FEET                84548 non-null  object\n 16  GROSS SQUARE FEET               84548 non-null  object\n 17  YEAR BUILT                      84548 non-null  int64 \n 18  TAX CLASS AT TIME OF SALE       84548 non-null  int64 \n 19  BUILDING CLASS AT TIME OF SALE  84548 non-null  object\n 20  SALE PRICE                      84548 non-null  object\n 21  SALE DATE                       84548 non-null  object\ndtypes: int64(10), object(12)\nmemory usage: 14.2+ MB\n","output_type":"stream"}]},{"cell_type":"code","source":"df.head(5)","metadata":{"execution":{"iopub.status.busy":"2024-09-02T17:10:37.213676Z","iopub.execute_input":"2024-09-02T17:10:37.214051Z","iopub.status.idle":"2024-09-02T17:10:37.238264Z","shell.execute_reply.started":"2024-09-02T17:10:37.214011Z","shell.execute_reply":"2024-09-02T17:10:37.236886Z"},"trusted":true},"execution_count":66,"outputs":[{"execution_count":66,"output_type":"execute_result","data":{"text/plain":"   Unnamed: 0  BOROUGH   NEIGHBORHOOD  \\\n0           4        1  ALPHABET CITY   \n1           5        1  ALPHABET CITY   \n2           6        1  ALPHABET CITY   \n3           7        1  ALPHABET CITY   \n4           8        1  ALPHABET CITY   \n\n                       BUILDING CLASS CATEGORY TAX CLASS AT PRESENT  BLOCK  \\\n0  07 RENTALS - WALKUP APARTMENTS                                2A    392   \n1  07 RENTALS - WALKUP APARTMENTS                                 2    399   \n2  07 RENTALS - WALKUP APARTMENTS                                 2    399   \n3  07 RENTALS - WALKUP APARTMENTS                                2B    402   \n4  07 RENTALS - WALKUP APARTMENTS                                2A    404   \n\n   LOT EASE-MENT BUILDING CLASS AT PRESENT                 ADDRESS  \\\n0    6                                  C2            153 AVENUE B   \n1   26                                  C7   234 EAST 4TH   STREET   \n2   39                                  C7   197 EAST 3RD   STREET   \n3   21                                  C4     154 EAST 7TH STREET   \n4   55                                  C2  301 EAST 10TH   STREET   \n\n  APARTMENT NUMBER  ZIP CODE  RESIDENTIAL UNITS  COMMERCIAL UNITS  \\\n0                      10009                  5                 0   \n1                      10009                 28                 3   \n2                      10009                 16                 1   \n3                      10009                 10                 0   \n4                      10009                  6                 0   \n\n   TOTAL UNITS LAND SQUARE FEET GROSS SQUARE FEET  YEAR BUILT  \\\n0            5             1633              6440        1900   \n1           31             4616             18690        1900   \n2           17             2212              7803        1900   \n3           10             2272              6794        1913   \n4            6             2369              4615        1900   \n\n   TAX CLASS AT TIME OF SALE BUILDING CLASS AT TIME OF SALE SALE PRICE  \\\n0                          2                             C2    6625000   \n1                          2                             C7        -     \n2                          2                             C7        -     \n3                          2                             C4    3936272   \n4                          2                             C2    8000000   \n\n             SALE DATE  \n0  2017-07-19 00:00:00  \n1  2016-12-14 00:00:00  \n2  2016-12-09 00:00:00  \n3  2016-09-23 00:00:00  \n4  2016-11-17 00:00:00  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Unnamed: 0</th>\n      <th>BOROUGH</th>\n      <th>NEIGHBORHOOD</th>\n      <th>BUILDING CLASS CATEGORY</th>\n      <th>TAX CLASS AT PRESENT</th>\n      <th>BLOCK</th>\n      <th>LOT</th>\n      <th>EASE-MENT</th>\n      <th>BUILDING CLASS AT PRESENT</th>\n      <th>ADDRESS</th>\n      <th>APARTMENT NUMBER</th>\n      <th>ZIP CODE</th>\n      <th>RESIDENTIAL UNITS</th>\n      <th>COMMERCIAL UNITS</th>\n      <th>TOTAL UNITS</th>\n      <th>LAND SQUARE FEET</th>\n      <th>GROSS SQUARE FEET</th>\n      <th>YEAR BUILT</th>\n      <th>TAX CLASS AT TIME OF SALE</th>\n      <th>BUILDING CLASS AT TIME OF SALE</th>\n      <th>SALE PRICE</th>\n      <th>SALE DATE</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>4</td>\n      <td>1</td>\n      <td>ALPHABET CITY</td>\n      <td>07 RENTALS - WALKUP APARTMENTS</td>\n      <td>2A</td>\n      <td>392</td>\n      <td>6</td>\n      <td></td>\n      <td>C2</td>\n      <td>153 AVENUE B</td>\n      <td></td>\n      <td>10009</td>\n      <td>5</td>\n      <td>0</td>\n      <td>5</td>\n      <td>1633</td>\n      <td>6440</td>\n      <td>1900</td>\n      <td>2</td>\n      <td>C2</td>\n      <td>6625000</td>\n      <td>2017-07-19 00:00:00</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>5</td>\n      <td>1</td>\n      <td>ALPHABET CITY</td>\n      <td>07 RENTALS - WALKUP APARTMENTS</td>\n      <td>2</td>\n      <td>399</td>\n      <td>26</td>\n      <td></td>\n      <td>C7</td>\n      <td>234 EAST 4TH   STREET</td>\n      <td></td>\n      <td>10009</td>\n      <td>28</td>\n      <td>3</td>\n      <td>31</td>\n      <td>4616</td>\n      <td>18690</td>\n      <td>1900</td>\n      <td>2</td>\n      <td>C7</td>\n      <td>-</td>\n      <td>2016-12-14 00:00:00</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>6</td>\n      <td>1</td>\n      <td>ALPHABET CITY</td>\n      <td>07 RENTALS - WALKUP APARTMENTS</td>\n      <td>2</td>\n      <td>399</td>\n      <td>39</td>\n      <td></td>\n      <td>C7</td>\n      <td>197 EAST 3RD   STREET</td>\n      <td></td>\n      <td>10009</td>\n      <td>16</td>\n      <td>1</td>\n      <td>17</td>\n      <td>2212</td>\n      <td>7803</td>\n      <td>1900</td>\n      <td>2</td>\n      <td>C7</td>\n      <td>-</td>\n      <td>2016-12-09 00:00:00</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>7</td>\n      <td>1</td>\n      <td>ALPHABET CITY</td>\n      <td>07 RENTALS - WALKUP APARTMENTS</td>\n      <td>2B</td>\n      <td>402</td>\n      <td>21</td>\n      <td></td>\n      <td>C4</td>\n      <td>154 EAST 7TH STREET</td>\n      <td></td>\n      <td>10009</td>\n      <td>10</td>\n      <td>0</td>\n      <td>10</td>\n      <td>2272</td>\n      <td>6794</td>\n      <td>1913</td>\n      <td>2</td>\n      <td>C4</td>\n      <td>3936272</td>\n      <td>2016-09-23 00:00:00</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>8</td>\n      <td>1</td>\n      <td>ALPHABET CITY</td>\n      <td>07 RENTALS - WALKUP APARTMENTS</td>\n      <td>2A</td>\n      <td>404</td>\n      <td>55</td>\n      <td></td>\n      <td>C2</td>\n      <td>301 EAST 10TH   STREET</td>\n      <td></td>\n      <td>10009</td>\n      <td>6</td>\n      <td>0</td>\n      <td>6</td>\n      <td>2369</td>\n      <td>4615</td>\n      <td>1900</td>\n      <td>2</td>\n      <td>C2</td>\n      <td>8000000</td>\n      <td>2016-11-17 00:00:00</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"# df.drop(['Unnamed: 0', 'EASE-MENT', 'APARTMENT NUMBER', 'SALE DATE'], axis =1, inplace = True)","metadata":{"execution":{"iopub.status.busy":"2024-09-02T17:10:37.242177Z","iopub.execute_input":"2024-09-02T17:10:37.242846Z","iopub.status.idle":"2024-09-02T17:10:37.249257Z","shell.execute_reply.started":"2024-09-02T17:10:37.242796Z","shell.execute_reply":"2024-09-02T17:10:37.248024Z"},"trusted":true},"execution_count":67,"outputs":[]},{"cell_type":"code","source":"def rename_cols(cols):\n    return \"_\".join(word.capitalize() for word in cols.split())\n\ndf = df.rename(columns = rename_cols)","metadata":{"execution":{"iopub.status.busy":"2024-09-02T17:10:37.250715Z","iopub.execute_input":"2024-09-02T17:10:37.251091Z","iopub.status.idle":"2024-09-02T17:10:37.275863Z","shell.execute_reply.started":"2024-09-02T17:10:37.251043Z","shell.execute_reply":"2024-09-02T17:10:37.274452Z"},"trusted":true},"execution_count":68,"outputs":[]},{"cell_type":"code","source":"df.columns","metadata":{"execution":{"iopub.status.busy":"2024-09-02T17:10:37.277708Z","iopub.execute_input":"2024-09-02T17:10:37.278213Z","iopub.status.idle":"2024-09-02T17:10:37.287889Z","shell.execute_reply.started":"2024-09-02T17:10:37.278154Z","shell.execute_reply":"2024-09-02T17:10:37.286484Z"},"trusted":true},"execution_count":69,"outputs":[{"execution_count":69,"output_type":"execute_result","data":{"text/plain":"Index(['Unnamed:_0', 'Borough', 'Neighborhood', 'Building_Class_Category',\n       'Tax_Class_At_Present', 'Block', 'Lot', 'Ease-ment',\n       'Building_Class_At_Present', 'Address', 'Apartment_Number', 'Zip_Code',\n       'Residential_Units', 'Commercial_Units', 'Total_Units',\n       'Land_Square_Feet', 'Gross_Square_Feet', 'Year_Built',\n       'Tax_Class_At_Time_Of_Sale', 'Building_Class_At_Time_Of_Sale',\n       'Sale_Price', 'Sale_Date'],\n      dtype='object')"},"metadata":{}}]},{"cell_type":"code","source":"df.describe()","metadata":{"execution":{"iopub.status.busy":"2024-09-02T17:10:37.289640Z","iopub.execute_input":"2024-09-02T17:10:37.290133Z","iopub.status.idle":"2024-09-02T17:10:37.355727Z","shell.execute_reply.started":"2024-09-02T17:10:37.290077Z","shell.execute_reply":"2024-09-02T17:10:37.354224Z"},"trusted":true},"execution_count":70,"outputs":[{"execution_count":70,"output_type":"execute_result","data":{"text/plain":"         Unnamed:_0       Borough         Block           Lot      Zip_Code  \\\ncount  84548.000000  84548.000000  84548.000000  84548.000000  84548.000000   \nmean   10344.359878      2.998758   4237.218976    376.224015  10731.991614   \nstd     7151.779436      1.289790   3568.263407    658.136814   1290.879147   \nmin        4.000000      1.000000      1.000000      1.000000      0.000000   \n25%     4231.000000      2.000000   1322.750000     22.000000  10305.000000   \n50%     8942.000000      3.000000   3311.000000     50.000000  11209.000000   \n75%    15987.250000      4.000000   6281.000000   1001.000000  11357.000000   \nmax    26739.000000      5.000000  16322.000000   9106.000000  11694.000000   \n\n       Residential_Units  Commercial_Units   Total_Units    Year_Built  \\\ncount       84548.000000      84548.000000  84548.000000  84548.000000   \nmean            2.025264          0.193559      2.249184   1789.322976   \nstd            16.721037          8.713183     18.972584    537.344993   \nmin             0.000000          0.000000      0.000000      0.000000   \n25%             0.000000          0.000000      1.000000   1920.000000   \n50%             1.000000          0.000000      1.000000   1940.000000   \n75%             2.000000          0.000000      2.000000   1965.000000   \nmax          1844.000000       2261.000000   2261.000000   2017.000000   \n\n       Tax_Class_At_Time_Of_Sale  \ncount               84548.000000  \nmean                    1.657485  \nstd                     0.819341  \nmin                     1.000000  \n25%                     1.000000  \n50%                     2.000000  \n75%                     2.000000  \nmax                     4.000000  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Unnamed:_0</th>\n      <th>Borough</th>\n      <th>Block</th>\n      <th>Lot</th>\n      <th>Zip_Code</th>\n      <th>Residential_Units</th>\n      <th>Commercial_Units</th>\n      <th>Total_Units</th>\n      <th>Year_Built</th>\n      <th>Tax_Class_At_Time_Of_Sale</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>84548.000000</td>\n      <td>84548.000000</td>\n      <td>84548.000000</td>\n      <td>84548.000000</td>\n      <td>84548.000000</td>\n      <td>84548.000000</td>\n      <td>84548.000000</td>\n      <td>84548.000000</td>\n      <td>84548.000000</td>\n      <td>84548.000000</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>10344.359878</td>\n      <td>2.998758</td>\n      <td>4237.218976</td>\n      <td>376.224015</td>\n      <td>10731.991614</td>\n      <td>2.025264</td>\n      <td>0.193559</td>\n      <td>2.249184</td>\n      <td>1789.322976</td>\n      <td>1.657485</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>7151.779436</td>\n      <td>1.289790</td>\n      <td>3568.263407</td>\n      <td>658.136814</td>\n      <td>1290.879147</td>\n      <td>16.721037</td>\n      <td>8.713183</td>\n      <td>18.972584</td>\n      <td>537.344993</td>\n      <td>0.819341</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>4.000000</td>\n      <td>1.000000</td>\n      <td>1.000000</td>\n      <td>1.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>1.000000</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>4231.000000</td>\n      <td>2.000000</td>\n      <td>1322.750000</td>\n      <td>22.000000</td>\n      <td>10305.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>1.000000</td>\n      <td>1920.000000</td>\n      <td>1.000000</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>8942.000000</td>\n      <td>3.000000</td>\n      <td>3311.000000</td>\n      <td>50.000000</td>\n      <td>11209.000000</td>\n      <td>1.000000</td>\n      <td>0.000000</td>\n      <td>1.000000</td>\n      <td>1940.000000</td>\n      <td>2.000000</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>15987.250000</td>\n      <td>4.000000</td>\n      <td>6281.000000</td>\n      <td>1001.000000</td>\n      <td>11357.000000</td>\n      <td>2.000000</td>\n      <td>0.000000</td>\n      <td>2.000000</td>\n      <td>1965.000000</td>\n      <td>2.000000</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>26739.000000</td>\n      <td>5.000000</td>\n      <td>16322.000000</td>\n      <td>9106.000000</td>\n      <td>11694.000000</td>\n      <td>1844.000000</td>\n      <td>2261.000000</td>\n      <td>2261.000000</td>\n      <td>2017.000000</td>\n      <td>4.000000</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"df.info()","metadata":{"execution":{"iopub.status.busy":"2024-09-02T17:10:37.357161Z","iopub.execute_input":"2024-09-02T17:10:37.357598Z","iopub.status.idle":"2024-09-02T17:10:37.485204Z","shell.execute_reply.started":"2024-09-02T17:10:37.357546Z","shell.execute_reply":"2024-09-02T17:10:37.483959Z"},"trusted":true},"execution_count":71,"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 84548 entries, 0 to 84547\nData columns (total 22 columns):\n #   Column                          Non-Null Count  Dtype \n---  ------                          --------------  ----- \n 0   Unnamed:_0                      84548 non-null  int64 \n 1   Borough                         84548 non-null  int64 \n 2   Neighborhood                    84548 non-null  object\n 3   Building_Class_Category         84548 non-null  object\n 4   Tax_Class_At_Present            84548 non-null  object\n 5   Block                           84548 non-null  int64 \n 6   Lot                             84548 non-null  int64 \n 7   Ease-ment                       84548 non-null  object\n 8   Building_Class_At_Present       84548 non-null  object\n 9   Address                         84548 non-null  object\n 10  Apartment_Number                84548 non-null  object\n 11  Zip_Code                        84548 non-null  int64 \n 12  Residential_Units               84548 non-null  int64 \n 13  Commercial_Units                84548 non-null  int64 \n 14  Total_Units                     84548 non-null  int64 \n 15  Land_Square_Feet                84548 non-null  object\n 16  Gross_Square_Feet               84548 non-null  object\n 17  Year_Built                      84548 non-null  int64 \n 18  Tax_Class_At_Time_Of_Sale       84548 non-null  int64 \n 19  Building_Class_At_Time_Of_Sale  84548 non-null  object\n 20  Sale_Price                      84548 non-null  object\n 21  Sale_Date                       84548 non-null  object\ndtypes: int64(10), object(12)\nmemory usage: 14.2+ MB\n","output_type":"stream"}]},{"cell_type":"code","source":"df['Building_Class_At_Time_Of_Sale'].value_counts()","metadata":{"execution":{"iopub.status.busy":"2024-09-02T17:10:37.487038Z","iopub.execute_input":"2024-09-02T17:10:37.487572Z","iopub.status.idle":"2024-09-02T17:10:37.514122Z","shell.execute_reply.started":"2024-09-02T17:10:37.487516Z","shell.execute_reply":"2024-09-02T17:10:37.512657Z"},"trusted":true},"execution_count":72,"outputs":[{"execution_count":72,"output_type":"execute_result","data":{"text/plain":"Building_Class_At_Time_Of_Sale\nR4    12989\nD4    12666\nA1     6751\nA5     5671\nB2     4918\n      ...  \nI3        1\nR7        1\nQ8        1\nY1        1\nZ7        1\nName: count, Length: 166, dtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"df['Gross_Square_Feet'].value_counts()","metadata":{"execution":{"iopub.status.busy":"2024-09-02T17:10:37.515750Z","iopub.execute_input":"2024-09-02T17:10:37.516130Z","iopub.status.idle":"2024-09-02T17:10:37.551294Z","shell.execute_reply.started":"2024-09-02T17:10:37.516090Z","shell.execute_reply":"2024-09-02T17:10:37.550038Z"},"trusted":true},"execution_count":73,"outputs":[{"execution_count":73,"output_type":"execute_result","data":{"text/plain":"Gross_Square_Feet\n -       27612\n0        11417\n2400       386\n1800       361\n2000       359\n         ...  \n13740        1\n12256        1\n3823         1\n7768         1\n64117        1\nName: count, Length: 5691, dtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"columns = ['Land_Square_Feet', 'Gross_Square_Feet', 'Sale_Price']\nfor i in columns:\n    df[i] = pd.to_numeric(df[i].str.replace(',', '').str.strip(), errors='coerce')","metadata":{"execution":{"iopub.status.busy":"2024-09-02T17:10:37.552722Z","iopub.execute_input":"2024-09-02T17:10:37.553124Z","iopub.status.idle":"2024-09-02T17:10:38.032717Z","shell.execute_reply.started":"2024-09-02T17:10:37.553081Z","shell.execute_reply":"2024-09-02T17:10:38.031436Z"},"trusted":true},"execution_count":74,"outputs":[]},{"cell_type":"code","source":"df_corr = df[['Borough', 'Block', 'Lot',\n       'Residential_Units', 'Commercial_Units', 'Total_Units',\n       'Land_Square_Feet', 'Gross_Square_Feet', 'Year_Built',\n       'Tax_Class_At_Time_Of_Sale', 'Sale_Price']].dropna().corr()","metadata":{"execution":{"iopub.status.busy":"2024-09-02T17:10:38.034146Z","iopub.execute_input":"2024-09-02T17:10:38.034560Z","iopub.status.idle":"2024-09-02T17:10:38.066567Z","shell.execute_reply.started":"2024-09-02T17:10:38.034511Z","shell.execute_reply":"2024-09-02T17:10:38.065133Z"},"trusted":true},"execution_count":75,"outputs":[]},{"cell_type":"code","source":"plt.figure(figsize = (12, 8))\nsns.heatmap(df_corr, annot = True)\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-09-02T17:10:38.072908Z","iopub.execute_input":"2024-09-02T17:10:38.073369Z","iopub.status.idle":"2024-09-02T17:10:38.904970Z","shell.execute_reply.started":"2024-09-02T17:10:38.073295Z","shell.execute_reply":"2024-09-02T17:10:38.903605Z"},"trusted":true},"execution_count":76,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 1200x800 with 2 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"code","source":"from sklearn.model_selection import KFold\n\ndf = df.fillna(method = 'ffill')\ndf = df.reset_index(drop = True)\nkf = KFold(n_splits=5, shuffle=True, random_state=42)\n# for train_indices, test_indices in kf.split(df, df['Gross_Square_Feet']):\n#     train_data_split = df.loc[train_indices]\n#     test_data_split = df.loc[test_indices]\nfor train_indices, test_indices in kf.split(df):\n    train_data_split = df.loc[train_indices]\n    test_data_split = df.loc[test_indices]","metadata":{"execution":{"iopub.status.busy":"2024-09-02T17:10:38.906910Z","iopub.execute_input":"2024-09-02T17:10:38.907326Z","iopub.status.idle":"2024-09-02T17:10:39.246099Z","shell.execute_reply.started":"2024-09-02T17:10:38.907282Z","shell.execute_reply":"2024-09-02T17:10:39.244730Z"},"trusted":true},"execution_count":77,"outputs":[{"name":"stderr","text":"/tmp/ipykernel_36/79436489.py:3: FutureWarning: DataFrame.fillna with 'method' is deprecated and will raise in a future version. Use obj.ffill() or obj.bfill() instead.\n  df = df.fillna(method = 'ffill')\n","output_type":"stream"}]},{"cell_type":"code","source":"df['Land_Square_Feet'].value_counts()","metadata":{"execution":{"iopub.status.busy":"2024-09-02T17:10:39.248041Z","iopub.execute_input":"2024-09-02T17:10:39.248586Z","iopub.status.idle":"2024-09-02T17:10:39.263514Z","shell.execute_reply.started":"2024-09-02T17:10:39.248515Z","shell.execute_reply":"2024-09-02T17:10:39.262178Z"},"trusted":true},"execution_count":78,"outputs":[{"execution_count":78,"output_type":"execute_result","data":{"text/plain":"Land_Square_Feet\n0.0        10326\n2000.0      4003\n2500.0      3824\n4000.0      3351\n5000.0      1443\n           ...  \n2543.0         1\n5908.0         1\n7312.0         1\n5717.0         1\n10796.0        1\nName: count, Length: 6061, dtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"from sklearn.base import BaseEstimator, TransformerMixin\n\nclass toString(BaseEstimator, TransformerMixin):\n    \n    def fit(self, X, y = None):\n        return self\n    \n    def transform(self, X):\n        columns = ['Land_Square_Feet', 'Gross_Square_Feet', 'Sale_Price']\n        for i in columns:\n            df[i] = pd.to_numeric(df[i].str.replace(',', '').str.strip(), errors='coerce')\n        return X","metadata":{"execution":{"iopub.status.busy":"2024-09-02T17:10:39.265187Z","iopub.execute_input":"2024-09-02T17:10:39.266103Z","iopub.status.idle":"2024-09-02T17:10:39.274855Z","shell.execute_reply.started":"2024-09-02T17:10:39.266056Z","shell.execute_reply":"2024-09-02T17:10:39.273433Z"},"trusted":true},"execution_count":79,"outputs":[]},{"cell_type":"code","source":"from sklearn.preprocessing import LabelEncoder\n\nclass FeatureEncoder(BaseEstimator, TransformerMixin):\n    def fit(self, X, y = None):\n        return self\n    \n    def transform(self, X):\n        encoder = LabelEncoder()\n        X['Tax_Class_At_Present'] = encoder.fit_transform(X['Tax_Class_At_Present'])\n        return X","metadata":{"execution":{"iopub.status.busy":"2024-09-02T17:10:39.276514Z","iopub.execute_input":"2024-09-02T17:10:39.276988Z","iopub.status.idle":"2024-09-02T17:10:39.288422Z","shell.execute_reply.started":"2024-09-02T17:10:39.276916Z","shell.execute_reply":"2024-09-02T17:10:39.286740Z"},"trusted":true},"execution_count":80,"outputs":[]},{"cell_type":"code","source":"class FeatureDropper(BaseEstimator, TransformerMixin):\n    def fit(self, X, y = None):\n        return self\n    \n    def transform(self, X):\n        return X.drop(['Unnamed:_0', 'Neighborhood','Ease-ment', 'Apartment_Number', 'Sale_Date', \n                       'Building_Class_Category', 'Building_Class_At_Present', 'Address', \n                       'Building_Class_At_Time_Of_Sale', 'Borough', 'Block', 'Lot', 'Year_Built'], axis = 1)\n\n# df.drop(['Unnamed:_0', 'Ease-ment', 'Apartment_Number', 'Sale_Date', \n#                        'Building_Class_Category', 'Building_Class_At_Present', 'Address', \n#                        'Building_Class_At_Time_Of_Sale'], axis = 1, inplace = True)","metadata":{"execution":{"iopub.status.busy":"2024-09-02T17:10:39.290671Z","iopub.execute_input":"2024-09-02T17:10:39.291110Z","iopub.status.idle":"2024-09-02T17:10:39.310165Z","shell.execute_reply.started":"2024-09-02T17:10:39.291065Z","shell.execute_reply":"2024-09-02T17:10:39.308927Z"},"trusted":true},"execution_count":81,"outputs":[]},{"cell_type":"code","source":"from sklearn.pipeline import Pipeline\n\npipeline = Pipeline([('FeatureEncoder',FeatureEncoder()),\n                    ('FeatureDropper', FeatureDropper())])\n\n# ('toString', toString()),","metadata":{"execution":{"iopub.status.busy":"2024-09-02T17:10:39.311384Z","iopub.execute_input":"2024-09-02T17:10:39.311794Z","iopub.status.idle":"2024-09-02T17:10:39.324103Z","shell.execute_reply.started":"2024-09-02T17:10:39.311749Z","shell.execute_reply":"2024-09-02T17:10:39.322792Z"},"trusted":true},"execution_count":82,"outputs":[]},{"cell_type":"code","source":"train_data_split = pipeline.fit_transform(train_data_split)","metadata":{"execution":{"iopub.status.busy":"2024-09-02T17:10:39.325613Z","iopub.execute_input":"2024-09-02T17:10:39.326018Z","iopub.status.idle":"2024-09-02T17:10:39.360485Z","shell.execute_reply.started":"2024-09-02T17:10:39.325971Z","shell.execute_reply":"2024-09-02T17:10:39.359133Z"},"trusted":true},"execution_count":83,"outputs":[]},{"cell_type":"code","source":"train_data_split.info()","metadata":{"execution":{"iopub.status.busy":"2024-09-02T17:10:39.361922Z","iopub.execute_input":"2024-09-02T17:10:39.362320Z","iopub.status.idle":"2024-09-02T17:10:39.375930Z","shell.execute_reply.started":"2024-09-02T17:10:39.362266Z","shell.execute_reply":"2024-09-02T17:10:39.374454Z"},"trusted":true},"execution_count":84,"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nIndex: 67639 entries, 0 to 84547\nData columns (total 9 columns):\n #   Column                     Non-Null Count  Dtype  \n---  ------                     --------------  -----  \n 0   Tax_Class_At_Present       67639 non-null  int64  \n 1   Zip_Code                   67639 non-null  int64  \n 2   Residential_Units          67639 non-null  int64  \n 3   Commercial_Units           67639 non-null  int64  \n 4   Total_Units                67639 non-null  int64  \n 5   Land_Square_Feet           67639 non-null  float64\n 6   Gross_Square_Feet          67639 non-null  float64\n 7   Tax_Class_At_Time_Of_Sale  67639 non-null  int64  \n 8   Sale_Price                 67639 non-null  float64\ndtypes: float64(3), int64(6)\nmemory usage: 5.2 MB\n","output_type":"stream"}]},{"cell_type":"code","source":"# df['Total_Area'] = df['Land_Square_Feet'] + df['Gross_Square_Feet']\n\nX_train = train_data_split.drop('Sale_Price', axis = 1)\ny_train = train_data_split['Sale_Price']","metadata":{"execution":{"iopub.status.busy":"2024-09-02T17:10:39.377576Z","iopub.execute_input":"2024-09-02T17:10:39.377960Z","iopub.status.idle":"2024-09-02T17:10:39.385955Z","shell.execute_reply.started":"2024-09-02T17:10:39.377920Z","shell.execute_reply":"2024-09-02T17:10:39.384714Z"},"trusted":true},"execution_count":85,"outputs":[]},{"cell_type":"code","source":"from sklearn.preprocessing import StandardScaler\nfrom sklearn.preprocessing import MinMaxScaler\n\nscaler = StandardScaler()\n# scaler = MinMaxScaler()\nX_train_data = scaler.fit_transform(X_train)\ny_train_data = y_train.to_numpy()","metadata":{"execution":{"iopub.status.busy":"2024-09-02T17:10:39.387526Z","iopub.execute_input":"2024-09-02T17:10:39.387946Z","iopub.status.idle":"2024-09-02T17:10:39.409349Z","shell.execute_reply.started":"2024-09-02T17:10:39.387904Z","shell.execute_reply":"2024-09-02T17:10:39.408026Z"},"trusted":true},"execution_count":86,"outputs":[]},{"cell_type":"code","source":"from sklearn.linear_model import LinearRegression\nfrom sklearn.svm import LinearSVR\nfrom sklearn.svm import SVR\nfrom sklearn.tree import DecisionTreeRegressor\nfrom sklearn.ensemble import RandomForestRegressor\n\nlr = LinearRegression()\nlsvr = LinearSVR()\nsvr = SVR()\ndtr = DecisionTreeRegressor()\nrfr = RandomForestRegressor()\n\nlr.fit(X_train_data, y_train_data)\nlsvr.fit(X_train_data, y_train_data)\nsvr.fit(X_train_data, y_train_data)\ndtr.fit(X_train_data, y_train_data)\nrfr.fit(X_train_data, y_train_data)","metadata":{"execution":{"iopub.status.busy":"2024-09-02T17:10:39.411041Z","iopub.execute_input":"2024-09-02T17:10:39.411461Z","iopub.status.idle":"2024-09-02T17:15:15.643689Z","shell.execute_reply.started":"2024-09-02T17:10:39.411417Z","shell.execute_reply":"2024-09-02T17:15:15.642434Z"},"trusted":true},"execution_count":87,"outputs":[{"execution_count":87,"output_type":"execute_result","data":{"text/plain":"RandomForestRegressor()","text/html":"<style>#sk-container-id-5 {color: black;background-color: white;}#sk-container-id-5 pre{padding: 0;}#sk-container-id-5 div.sk-toggleable {background-color: white;}#sk-container-id-5 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-5 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-5 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-5 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-5 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-5 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-5 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-5 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-5 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-5 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-5 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-5 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-5 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-5 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-5 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-5 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-5 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-5 div.sk-item {position: relative;z-index: 1;}#sk-container-id-5 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-5 div.sk-item::before, #sk-container-id-5 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-5 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-5 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-5 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-5 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-5 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-5 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-5 div.sk-label-container {text-align: center;}#sk-container-id-5 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-5 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-5\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>RandomForestRegressor()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-9\" type=\"checkbox\" checked><label for=\"sk-estimator-id-9\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">RandomForestRegressor</label><div class=\"sk-toggleable__content\"><pre>RandomForestRegressor()</pre></div></div></div></div></div>"},"metadata":{}}]},{"cell_type":"code","source":"from sklearn.model_selection import GridSearchCV\n\nlsvr_rg = LinearSVR(dual = True)\nsvr_rg = SVR()\ndtr_rg = DecisionTreeRegressor()\nrfr_rg = RandomForestRegressor() \n\np_grid_lsvr = ({'epsilon': [0.01, 0.1, 0.2, 0.5, 1.0],'C': [0.1, 1.0, 10.0, 100.0], 'max_iter': [1000, 5000, 10000]})\ng_srch_lsvr = GridSearchCV(lsvr_rg, p_grid_lsvr, cv = 3, scoring = 'neg_mean_squared_error', return_train_score = True)\ng_srch_lsvr.fit(X_train_data, y_train_data)\n\n# p_grid_svr = ({'C': [0.1, 1.0, 10.0, 100.0],\n#                'epsilon': [0.01, 0.1, 0.2, 0.5],'gamma': ['scale', 'auto'],'degree': [2, 3, 4]})\n# g_srch_svr = GridSearchCV(svr_rg, p_grid_svr, cv = 3, scoring = 'neg_mean_squared_error', return_train_score = True)\n# g_srch_svr.fit(X_train_data, y_train_data)\n\n# p_grid_dtr = ({'splitter': ['best', 'random'],'max_depth': [None, 10, 20, 30, 40, 50],\n#                'min_samples_split': [2, 5, 10],'min_samples_leaf': [1, 2, 4],\n#     'max_features': [None, 'auto', 'sqrt', 'log2'],'max_leaf_nodes': [None, 10, 20, 30]})\n# g_srch_dtr = GridSearchCV(dtr_rg, p_grid_dtr, cv = 3, scoring = 'neg_mean_squared_error', return_train_score = True)\n# g_srch_dtr.fit(X_train_data, y_train_data)\n\np_grid_rfr = ({\n    'n_estimators': [50, 100, 200, 500], 'max_depth': [None, 10, 20, 30, 40, 50],\n    'min_samples_split': [2, 5, 10],'min_samples_leaf': [1, 2, 4],\n    'max_features': ['auto', 'sqrt', 'log2'],'bootstrap': [True, False]\n})\ng_srch_rfr = GridSearchCV(rfr_rg, p_grid_rfr, cv = 3, scoring = 'neg_mean_squared_error', return_train_score = True)\ng_srch_rfr.fit(X_train_data, y_train_data)\n","metadata":{"execution":{"iopub.status.busy":"2024-09-02T17:15:15.645294Z","iopub.execute_input":"2024-09-02T17:15:15.645831Z"},"trusted":true},"execution_count":null,"outputs":[{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/sklearn/ensemble/_forest.py:413: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0` or remove this parameter as it is also the default value for RandomForestRegressors and ExtraTreesRegressors.\n  warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/ensemble/_forest.py:413: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0` or remove this parameter as it is also the default value for RandomForestRegressors and ExtraTreesRegressors.\n  warn(\n","output_type":"stream"}]},{"cell_type":"code","source":"final_lsvr_clf = g_srch_lsvr.best_estimator_\nprint(final_lsvr_clf)\n\n# final_dtr_clf = g_srch_dtr.best_estimator_\n# print(final_dtr_clf)\n\n# final_svr_clf = g_srch_svr.best_estimator_\n# print(final_svr_clf)\n\nfinal_rfr_clf = g_srch_rfr.best_estimator_\nprint(final_rfr_clf)","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"test_data_split = pipeline.fit_transform(test_data_split)","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"X_test = test_data_split.drop('Sale_Price', axis = 1)\ny_test = test_data_split['Sale_Price']\n\nscaler = StandardScaler()\n# scaler = MinMaxScaler()\nX_test = scaler.fit_transform(X_test)\ny_test = y_test.to_numpy()","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"print(\"The accuracy score before hyperparameter tuning\")\n\nprint(\"Linear Regression : \", lr.score(X_test, y_test))\n\nprint(\"LinearSVR : \", lsvr.score(X_test, y_test))\n\nprint(\"SVR : \", svr.score(X_test, y_test))\n\nprint(\"Decision Tree Regressor : \", dtr.score(X_test, y_test))\n\nprint(\"Random Forest Regressor : \", rfr.score(X_test, y_test))","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"print(\"The accuracy scores after hyperparameter tuning\")\n\nprint(\"LinearSVR : \", final_lsvr_clf.score(X_test, y_test))\n\n# print(\"SVR : \", final_svr_clf.score(X_test, y_test))\n\n# print(\"Decision Tree Regressor : \", final_dtr_clf.score(X_test, y_test))\n\nprint(\"Random Forest Regressor : \", final_rfr_clf.score(X_test, y_test))","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"import pandas as pd\nimport numpy as np\n\nfrom sklearn.model_selection import train_test_split\nimport xgboost as xgb\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.metrics import r2_score","metadata":{"execution":{"iopub.status.busy":"2024-09-02T18:10:16.998518Z","iopub.execute_input":"2024-09-02T18:10:16.998993Z","iopub.status.idle":"2024-09-02T18:10:17.006029Z","shell.execute_reply.started":"2024-09-02T18:10:16.998948Z","shell.execute_reply":"2024-09-02T18:10:17.004635Z"},"trusted":true},"execution_count":113,"outputs":[]},{"cell_type":"code","source":"ndf = pd.read_csv('/kaggle/input/nyc-property-sales/nyc-rolling-sales.csv')","metadata":{"execution":{"iopub.status.busy":"2024-09-02T18:10:18.144270Z","iopub.execute_input":"2024-09-02T18:10:18.144750Z","iopub.status.idle":"2024-09-02T18:10:18.601103Z","shell.execute_reply.started":"2024-09-02T18:10:18.144706Z","shell.execute_reply":"2024-09-02T18:10:18.599798Z"},"trusted":true},"execution_count":114,"outputs":[]},{"cell_type":"code","source":"from sklearn.preprocessing import OneHotEncoder\n\ndef onehotencode(df, columns, prefixes):\n    df = df.copy()\n    \n    for column, prefix in zip(columns, prefixes):\n        dummies = pd.get_dummies(df[column], prefix = prefix)\n        df = pd.concat([df, dummies], axis = 1)\n        df = df.drop(column, axis = 1)\n        \n    return df","metadata":{"execution":{"iopub.status.busy":"2024-09-02T18:10:18.776024Z","iopub.execute_input":"2024-09-02T18:10:18.776500Z","iopub.status.idle":"2024-09-02T18:10:18.783992Z","shell.execute_reply.started":"2024-09-02T18:10:18.776457Z","shell.execute_reply":"2024-09-02T18:10:18.782868Z"},"trusted":true},"execution_count":115,"outputs":[]},{"cell_type":"code","source":"def preprocess(df):\n    df = df.copy()\n    \n    # Fixing the prediction column\n    df['SALE PRICE'] = df['SALE PRICE'].replace(' -  ', np.NaN).astype(float)\n    df = df.dropna(axis = 0).reset_index(drop = True)\n    \n    \n    # Dropping unneccsary columns\n    df = df.drop(['Unnamed: 0', 'EASE-MENT', 'ADDRESS', 'APARTMENT NUMBER', 'BLOCK', 'LOT'], axis = 1)\n    \n    # Replacing the missing values in the columns with np,NaN\n    df = df.replace(' -  ', np.NaN)\n    \n    # Filling missing values with means of their respective columns\n    for column in ['LAND SQUARE FEET', 'GROSS SQUARE FEET']:\n        df[column] = df[column].astype(float)\n        df[column] = df[column].fillna(df[column].mean())\n        \n    # Making the datetime column\n    df['SALE DATE'] = pd.to_datetime(df['SALE DATE'])\n    df['YEAR'] = df['SALE DATE'].apply(lambda x : x.year)\n    df['MONTH'] = df['SALE DATE'].apply(lambda x : x.month)\n    df['DAY'] = df['SALE DATE'].apply(lambda x : x.day)\n    df = df.drop('SALE DATE', axis = 1)\n    \n    # converting the categorical data into string\n    for column in ['BOROUGH', 'ZIP CODE']:\n        df[column] = df[column].astype(str)\n        \n    # OneHotEncode the categorical features\n    df = onehotencode(df, columns = ['BOROUGH', 'NEIGHBORHOOD',\n                                     'BUILDING CLASS CATEGORY','TAX CLASS AT PRESENT','BUILDING CLASS AT PRESENT',\n                                     'ZIP CODE', 'BUILDING CLASS AT TIME OF SALE'],\n                     prefixes = ['BO', 'NE', 'BC', 'TC', 'BP', 'ZC', 'BT'])\n    \n    # Splitting the data into X and y\n    X = df.drop('SALE PRICE', axis = 1)\n    y = df['SALE PRICE']\n    \n    # Scaling X\n    scaler = StandardScaler()\n    X = pd.DataFrame(scaler.fit_transform(X), columns = X.columns)\n    \n    return X, y","metadata":{"execution":{"iopub.status.busy":"2024-09-02T18:10:19.359754Z","iopub.execute_input":"2024-09-02T18:10:19.360212Z","iopub.status.idle":"2024-09-02T18:10:19.375743Z","shell.execute_reply.started":"2024-09-02T18:10:19.360168Z","shell.execute_reply":"2024-09-02T18:10:19.374365Z"},"trusted":true},"execution_count":116,"outputs":[]},{"cell_type":"code","source":"X, y = preprocess(ndf)","metadata":{"execution":{"iopub.status.busy":"2024-09-02T18:10:20.024369Z","iopub.execute_input":"2024-09-02T18:10:20.025067Z","iopub.status.idle":"2024-09-02T18:10:25.508192Z","shell.execute_reply.started":"2024-09-02T18:10:20.025015Z","shell.execute_reply":"2024-09-02T18:10:25.506889Z"},"trusted":true},"execution_count":117,"outputs":[]},{"cell_type":"code","source":"X.info()","metadata":{"execution":{"iopub.status.busy":"2024-09-02T18:07:02.505411Z","iopub.execute_input":"2024-09-02T18:07:02.505938Z","iopub.status.idle":"2024-09-02T18:07:02.557399Z","shell.execute_reply.started":"2024-09-02T18:07:02.505891Z","shell.execute_reply":"2024-09-02T18:07:02.556177Z"},"trusted":true},"execution_count":109,"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 69987 entries, 0 to 69986\nColumns: 833 entries, RESIDENTIAL UNITS to BT_Z9\ndtypes: bool(823), float64(2), int64(8)\nmemory usage: 60.3 MB\n","output_type":"stream"}]},{"cell_type":"markdown","source":"","metadata":{}},{"cell_type":"code","source":"{column : len(X[column].unique()) for column in X.select_dtypes('object').columns}","metadata":{"execution":{"iopub.status.busy":"2024-09-02T18:07:42.367362Z","iopub.execute_input":"2024-09-02T18:07:42.367846Z","iopub.status.idle":"2024-09-02T18:07:42.376986Z","shell.execute_reply.started":"2024-09-02T18:07:42.367801Z","shell.execute_reply":"2024-09-02T18:07:42.375819Z"},"trusted":true},"execution_count":110,"outputs":[{"execution_count":110,"output_type":"execute_result","data":{"text/plain":"{}"},"metadata":{}}]},{"cell_type":"code","source":"y","metadata":{"execution":{"iopub.status.busy":"2024-09-02T17:27:08.532694Z","iopub.execute_input":"2024-09-02T17:27:08.533170Z","iopub.status.idle":"2024-09-02T17:27:08.545708Z","shell.execute_reply.started":"2024-09-02T17:27:08.533126Z","shell.execute_reply":"2024-09-02T17:27:08.544311Z"},"trusted":true},"execution_count":29,"outputs":[{"execution_count":29,"output_type":"execute_result","data":{"text/plain":"0         6625000.0\n1         3936272.0\n2         8000000.0\n3         3192840.0\n4        16232000.0\n            ...    \n69982      450000.0\n69983      550000.0\n69984      460000.0\n69985    11693337.0\n69986       69300.0\nName: SALE PRICE, Length: 69987, dtype: float64"},"metadata":{}}]},{"cell_type":"code","source":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 123)\nX_train, X_val, y_train, y_val = train_test_split(X_train, y_train, test_size = 0.2, random_state = 123)\n\ndtrain = xgb.DMatrix(X_train, label = y_train)\ndval = xgb.DMatrix(X_val, label = y_val)\ndtest = xgb.DMatrix(X_test, label = y_test)","metadata":{"execution":{"iopub.status.busy":"2024-09-02T18:19:52.731048Z","iopub.execute_input":"2024-09-02T18:19:52.731564Z","iopub.status.idle":"2024-09-02T18:19:55.173746Z","shell.execute_reply.started":"2024-09-02T18:19:52.731518Z","shell.execute_reply":"2024-09-02T18:19:55.172647Z"},"trusted":true},"execution_count":118,"outputs":[]},{"cell_type":"code","source":"params = {'learning_rate' : 0.01, 'max_depth' : 15, 'lambda' : 0.01}\nmodel = xgb.train(params, dtrain, num_boost_round = 10000, evals = [(dval, 'eval')], early_stopping_rounds = 10)","metadata":{"execution":{"iopub.status.busy":"2024-09-02T18:25:03.392598Z","iopub.execute_input":"2024-09-02T18:25:03.393684Z","iopub.status.idle":"2024-09-02T18:25:29.816731Z","shell.execute_reply.started":"2024-09-02T18:25:03.393632Z","shell.execute_reply":"2024-09-02T18:25:29.815752Z"},"collapsed":true,"jupyter":{"outputs_hidden":true},"trusted":true},"execution_count":122,"outputs":[{"name":"stdout","text":"[0]\teval-rmse:7692073.27540\n[1]\teval-rmse:7679966.57626\n[2]\teval-rmse:7667948.13410\n[3]\teval-rmse:7656383.03234\n[4]\teval-rmse:7645440.40218\n[5]\teval-rmse:7634752.97729\n[6]\teval-rmse:7623888.51981\n[7]\teval-rmse:7613504.02683\n[8]\teval-rmse:7603156.91338\n[9]\teval-rmse:7593431.10792\n[10]\teval-rmse:7583450.05225\n[11]\teval-rmse:7574162.78195\n[12]\teval-rmse:7564669.51417\n[13]\teval-rmse:7555400.67401\n[14]\teval-rmse:7546311.44950\n[15]\teval-rmse:7537454.99698\n[16]\teval-rmse:7528810.28519\n[17]\teval-rmse:7520462.93768\n[18]\teval-rmse:7512225.98304\n[19]\teval-rmse:7504698.05742\n[20]\teval-rmse:7496772.04918\n[21]\teval-rmse:7489610.81807\n[22]\teval-rmse:7481979.15881\n[23]\teval-rmse:7474680.08857\n[24]\teval-rmse:7467911.38190\n[25]\teval-rmse:7461347.07641\n[26]\teval-rmse:7454970.53183\n[27]\teval-rmse:7448188.10732\n[28]\teval-rmse:7441675.56561\n[29]\teval-rmse:7435710.48668\n[30]\teval-rmse:7429135.19711\n[31]\teval-rmse:7422565.66297\n[32]\teval-rmse:7416441.39351\n[33]\teval-rmse:7410015.28031\n[34]\teval-rmse:7404579.74115\n[35]\teval-rmse:7399092.33757\n[36]\teval-rmse:7392651.76217\n[37]\teval-rmse:7386427.05708\n[38]\teval-rmse:7380448.44924\n[39]\teval-rmse:7374733.04532\n[40]\teval-rmse:7368702.37660\n[41]\teval-rmse:7363399.04292\n[42]\teval-rmse:7358261.79626\n[43]\teval-rmse:7353168.97961\n[44]\teval-rmse:7348334.21344\n[45]\teval-rmse:7343562.54063\n[46]\teval-rmse:7338261.41457\n[47]\teval-rmse:7334381.28760\n[48]\teval-rmse:7329435.14551\n[49]\teval-rmse:7324434.63978\n[50]\teval-rmse:7320057.84760\n[51]\teval-rmse:7316168.51684\n[52]\teval-rmse:7312744.46867\n[53]\teval-rmse:7308036.10028\n[54]\teval-rmse:7303989.48395\n[55]\teval-rmse:7300068.67328\n[56]\teval-rmse:7296617.55728\n[57]\teval-rmse:7293354.94391\n[58]\teval-rmse:7290010.28763\n[59]\teval-rmse:7286841.99445\n[60]\teval-rmse:7283030.57667\n[61]\teval-rmse:7279998.06293\n[62]\teval-rmse:7276651.66557\n[63]\teval-rmse:7273563.23665\n[64]\teval-rmse:7270870.72649\n[65]\teval-rmse:7267326.33290\n[66]\teval-rmse:7263732.00872\n[67]\teval-rmse:7260713.24025\n[68]\teval-rmse:7257893.85746\n[69]\teval-rmse:7255210.14263\n[70]\teval-rmse:7252708.68246\n[71]\teval-rmse:7250259.01184\n[72]\teval-rmse:7246928.54142\n[73]\teval-rmse:7243575.67283\n[74]\teval-rmse:7240447.02162\n[75]\teval-rmse:7237084.26682\n[76]\teval-rmse:7233955.24880\n[77]\teval-rmse:7230828.64337\n[78]\teval-rmse:7227965.63806\n[79]\teval-rmse:7224946.84245\n[80]\teval-rmse:7221967.88479\n[81]\teval-rmse:7219063.78405\n[82]\teval-rmse:7216232.57532\n[83]\teval-rmse:7213415.00969\n[84]\teval-rmse:7209468.06789\n[85]\teval-rmse:7205446.61078\n[86]\teval-rmse:7201134.11117\n[87]\teval-rmse:7197171.85238\n[88]\teval-rmse:7193076.60320\n[89]\teval-rmse:7188476.66756\n[90]\teval-rmse:7185878.35507\n[91]\teval-rmse:7181041.23588\n[92]\teval-rmse:7179160.04733\n[93]\teval-rmse:7176687.07005\n[94]\teval-rmse:7173123.16461\n[95]\teval-rmse:7170372.90338\n[96]\teval-rmse:7166736.56282\n[97]\teval-rmse:7164405.48125\n[98]\teval-rmse:7161089.86041\n[99]\teval-rmse:7159068.11068\n[100]\teval-rmse:7155473.49124\n[101]\teval-rmse:7153472.45878\n[102]\teval-rmse:7149835.44303\n[103]\teval-rmse:7147798.67055\n[104]\teval-rmse:7143736.89725\n[105]\teval-rmse:7142175.98751\n[106]\teval-rmse:7140655.01267\n[107]\teval-rmse:7137636.31814\n[108]\teval-rmse:7134479.93010\n[109]\teval-rmse:7132538.35466\n[110]\teval-rmse:7130277.14384\n[111]\teval-rmse:7127574.40775\n[112]\teval-rmse:7125359.76963\n[113]\teval-rmse:7124140.01051\n[114]\teval-rmse:7120874.07315\n[115]\teval-rmse:7119159.19490\n[116]\teval-rmse:7116521.03384\n[117]\teval-rmse:7114818.67464\n[118]\teval-rmse:7113351.30500\n[119]\teval-rmse:7110460.45906\n[120]\teval-rmse:7108505.97391\n[121]\teval-rmse:7105845.24225\n[122]\teval-rmse:7103181.11172\n[123]\teval-rmse:7100540.85370\n[124]\teval-rmse:7099405.39244\n[125]\teval-rmse:7098079.61613\n[126]\teval-rmse:7097594.07474\n[127]\teval-rmse:7097219.52786\n[128]\teval-rmse:7096814.89708\n[129]\teval-rmse:7096511.04843\n[130]\teval-rmse:7096143.01063\n[131]\teval-rmse:7095909.09461\n[132]\teval-rmse:7095547.56786\n[133]\teval-rmse:7095313.60235\n[134]\teval-rmse:7094976.45070\n[135]\teval-rmse:7094830.31202\n[136]\teval-rmse:7094486.82119\n[137]\teval-rmse:7094366.10942\n[138]\teval-rmse:7094147.80686\n[139]\teval-rmse:7094143.72939\n[140]\teval-rmse:7093940.28922\n[141]\teval-rmse:7093971.39761\n[142]\teval-rmse:7093976.83695\n[143]\teval-rmse:7093853.94179\n[144]\teval-rmse:7093900.35041\n[145]\teval-rmse:7093949.37772\n[146]\teval-rmse:7093584.50847\n[147]\teval-rmse:7093472.20917\n[148]\teval-rmse:7093339.12252\n[149]\teval-rmse:7092568.55356\n[150]\teval-rmse:7091447.56590\n[151]\teval-rmse:7091485.74519\n[152]\teval-rmse:7091460.24033\n[153]\teval-rmse:7091634.20873\n[154]\teval-rmse:7091843.97015\n[155]\teval-rmse:7091889.58211\n[156]\teval-rmse:7092031.99992\n[157]\teval-rmse:7092124.50530\n[158]\teval-rmse:7092360.98398\n[159]\teval-rmse:7092311.43281\n[160]\teval-rmse:7092525.03969\n","output_type":"stream"}]},{"cell_type":"code","source":"y_true = np.array(y_test)\ny_pred = model.predict(dtest)","metadata":{"execution":{"iopub.status.busy":"2024-09-02T18:25:41.945948Z","iopub.execute_input":"2024-09-02T18:25:41.946369Z","iopub.status.idle":"2024-09-02T18:25:41.958318Z","shell.execute_reply.started":"2024-09-02T18:25:41.946328Z","shell.execute_reply":"2024-09-02T18:25:41.956981Z"},"trusted":true},"execution_count":124,"outputs":[]},{"cell_type":"code","source":"print(\"R2 Score {:4f}\".format(r2_score(y_true, y_pred)))","metadata":{"execution":{"iopub.status.busy":"2024-09-02T18:25:42.549068Z","iopub.execute_input":"2024-09-02T18:25:42.549507Z","iopub.status.idle":"2024-09-02T18:25:42.557988Z","shell.execute_reply.started":"2024-09-02T18:25:42.549465Z","shell.execute_reply":"2024-09-02T18:25:42.556590Z"},"trusted":true},"execution_count":125,"outputs":[{"name":"stdout","text":"R2 Score 0.297740\n","output_type":"stream"}]},{"cell_type":"code","source":" from sklearn.linear_model import LinearRegression\nfrom sklearn.svm import LinearSVR\nfrom sklearn.svm import SVR\nfrom sklearn.tree import DecisionTreeRegressor\nfrom sklearn.ensemble import RandomForestRegressor\n\nlr = LinearRegression()\nlsvr = LinearSVR()\nsvr = SVR()\ndtr = DecisionTreeRegressor()\nrfr = RandomForestRegressor()\n\nlr.fit(X_train, y_train)\nlsvr.fit(X_train, y_train)\nsvr.fit(X_train, y_train)\ndtr.fit(X_train, y_train)\nrfr.fit(X_train, y_train)","metadata":{"execution":{"iopub.status.busy":"2024-09-02T18:26:51.271152Z","iopub.execute_input":"2024-09-02T18:26:51.272345Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"print(\"The accuracy score before hyperparameter tuning\")\n\nprint(\"Linear Regression : \", lr.score(X_test, y_test))\n\nprint(\"LinearSVR : \", lsvr.score(X_test, y_test))\n\nprint(\"SVR : \", svr.score(X_test, y_test))\n\nprint(\"Decision Tree Regressor : \", dtr.score(X_test, y_test))\n\nprint(\"Random Forest Regressor : \", rfr.score(X_test, y_test))","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]}]}